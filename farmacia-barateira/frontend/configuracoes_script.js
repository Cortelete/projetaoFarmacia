document.addEventListener("DOMContentLoaded", () => {
    // Seleciona os links das abas n√£o funcionais (Usu√°rios, Prefer√™ncias, Integra√ß√µes)
    const abasNaoFuncionais = document.querySelectorAll('nav[aria-label="Tabs"] a:not([aria-current="page"])');

    // Seleciona bot√µes espec√≠ficos por ID
    const btnUsuarios = document.getElementById('gerenciar-usuarios-btn');
    const btnPrefs = document.getElementById('salvar-preferencias-btn');
    // Seleciona todos os bot√µes que come√ßam com 'conectar-integracao-'
    const btnsIntegracao = document.querySelectorAll('[id^="conectar-integracao-"]'); 

    const mensagemPadrao = "Esta funcionalidade ainda est√° em desenvolvimento. üöß";

    // Adiciona listener para as abas n√£o funcionais
    abasNaoFuncionais.forEach(aba => {
        aba.addEventListener('click', (event) => {
            event.preventDefault(); // Impede a navega√ß√£o padr√£o do link (href="#")
            alert(mensagemPadrao);
        });
    });

    // Adiciona listener para o bot√£o "Gerenciar Usu√°rios"
    if (btnUsuarios) {
        btnUsuarios.addEventListener('click', async (event) => {
            event.preventDefault(); // Previne qualquer a√ß√£o padr√£o do bot√£o
            alert(mensagemPadrao);

            // Exemplo de envio de dados via fetch (atualize com os dados reais)
            try {
                const response = await fetch('/api/atualizar-usuarios', {  // Atualize a URL da API
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ userId: 1, nome: 'Novo Nome' }),  // Dados fict√≠cios
                });

                if (!response.ok) {
                    throw new Error('Erro ao atualizar usu√°rio');
                }

                const data = await response.json();
                console.log('Dados atualizados:', data);
            } catch (error) {
                console.error('Erro:', error);
            }
        });
    }

    // Adiciona listener para o bot√£o "Salvar Prefer√™ncias"
    if (btnPrefs) {
        btnPrefs.addEventListener('click', async (event) => {
            event.preventDefault(); // Previne envio de formul√°rio se for type=submit
            alert(mensagemPadrao);

            // Exemplo de envio de dados via fetch (atualize com os dados reais)
            try {
                const response = await fetch('/api/salvar-preferencias', {  // Atualize a URL da API
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ preferencia: 'nova-preferencia' }),  // Dados fict√≠cios
                });

                if (!response.ok) {
                    throw new Error('Erro ao salvar prefer√™ncias');
                }

                const data = await response.json();
                console.log('Prefer√™ncias salvas:', data);
            } catch (error) {
                console.error('Erro:', error);
            }
        });
    }

    // Adiciona listener para os bot√µes de "Conectar/Desconectar" das integra√ß√µes
    btnsIntegracao.forEach(btn => {
        btn.addEventListener('click', async (event) => {
            event.preventDefault(); // Previne qualquer a√ß√£o padr√£o do bot√£o
            alert(mensagemPadrao);

            // Exemplo de envio de dados via fetch (atualize com os dados reais)
            try {
                const response = await fetch('/api/gerenciar-integracao', {  // Atualize a URL da API
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json',
                    },
                    body: JSON.stringify({ integracaoId: btn.id, status: 'ativo' }),  // Dados fict√≠cios
                });

                if (!response.ok) {
                    throw new Error('Erro ao conectar/desconectar integra√ß√£o');
                }

                const data = await response.json();
                console.log('Integra√ß√£o atualizada:', data);
            } catch (error) {
                console.error('Erro:', error);
            }
        });
    });

    // Nota: O bot√£o "Alterar Logo" e "Salvar Informa√ß√µes" na se√ß√£o Geral
    // n√£o foram inclu√≠dos aqui, pois pertencem √† parte funcional (Geral).
    // Se eles tamb√©m n√£o estiverem implementados, adicione IDs e listeners para eles.

});
